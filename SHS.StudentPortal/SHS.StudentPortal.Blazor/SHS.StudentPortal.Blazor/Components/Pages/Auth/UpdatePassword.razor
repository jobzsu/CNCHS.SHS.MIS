@using MediatR
@using SHS.StudentPortal.App.Abstractions
@using SHS.StudentPortal.App.Commands
@using SHS.StudentPortal.Common.Utilities


@inject ILoadingService LoadingService;
@inject DialogService DialogService;
@inject NotificationService NotificationService;
@inject ISender Sender;

<RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Normal" AlignItems="AlignItems.Normal" Gap="1rem">
    <RadzenFormField AllowFloatingLabel="false" Text="New Password">
        <RadzenPassword @bind-Value="NewPassword" Placeholder="Enter new password" />
    </RadzenFormField>
    <RadzenFormField AllowFloatingLabel="false" Text="Confirm New Password">
        <RadzenPassword @bind-Value="ConfirmPassword" Placeholder="Confirm new password" />
    </RadzenFormField>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" AlignItems="AlignItems.End" Gap="10px">
        <RadzenButton Text="Save" ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Click="SubmitUpdatePassword" />
        <RadzenButton Text="Cancel" ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Info" Size="ButtonSize.Small" Click="Cancel" />
    </RadzenStack>
</RadzenStack>

@code {
    [Parameter]
    public Guid CurrentUserId { get; set; }

    private string NewPassword = string.Empty;
    private string ConfirmPassword = string.Empty;

    private async Task SubmitUpdatePassword()
    {
        if (LoadingService.IsLoading)
            return;

        if (string.IsNullOrEmpty(NewPassword) || string.IsNullOrEmpty(ConfirmPassword))
        {
            NotificationService.Notify(NotificationHelper.WarningNotif("Please fill in all fields", "Missing required fields"));

            return;
        }

        if (NewPassword.Length < 6)
        {
            NotificationService.Notify(NotificationHelper.WarningNotif("Password must be atleast 6 characters", "Poor password strength"));

            return;
        }

        if (NewPassword != ConfirmPassword)
        {
            NotificationService.Notify(NotificationHelper.WarningNotif("Password mismatch", "Please make sure that the passwords match."));

            return;
        }

        LoadingService.IsLoading = true;

        var command = new UpdatePasswordCommand(CurrentUserId, NewPassword);

        var result = await Sender.Send(command);

        LoadingService.IsLoading = false;

        if (result.IsSuccess)
        {
            DialogService.Close(true);
        }
        else
            NotificationService.Notify(NotificationHelper.ErrorNotif(result.Error!.Message));
    }

    private void Cancel()
    {
        DialogService.Close(false);
    }
}
