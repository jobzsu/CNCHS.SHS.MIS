@using SHS.StudentPortal.Common.Utilities.Models
@using SHS.StudentPortal.Common.Models
@model PaginatedList<SubjectListViewModel>

@{
    ViewData["Title"] = "Subjects";
}

<!-- Navbar Pagination -->
<div class="mt-3">
    <nav class="navbar navbar-light" style="background-color: #e3f2fd; border-radius: 5px">
        <div class="container-fluid">
            <form class="d-flex" asp-controller="Home" asp-action="Subjects" method="get">
                <input class="form-control me-2"
                       type="search"
                       placeholder="Search"
                       aria-label="Search"
                       name="searchKeyword"
                       asp-for="@ViewData["SearchKeyword"]" />
                <select id="trackSelectList" class="form-select me-2" name="track" asp-for="@ViewData["Track"]" asp-items="@(new SelectList(Track.GetAllTracks, "Id", "Name"))" style="min-width: 250px; max-width: 250px">
                    <option value="">-- Select Track --</option>
                </select>
                <select id="strandSelectList" class="form-select me-2" name="strand" asp-for="@ViewData["Strand"]" asp-items="@(new SelectList(Strand.GetAllStrandsIncludePlaceholder, "Id", "Name"))" style="min-width: 470px; max-width: 470px">
                    <option value="">-- Select Strand --</option>
                </select>
                <button class="btn btn-outline-primary float-end me-2" type="submit">Search</button>
                <a href="@Url.Action("Subjects", "Home")" class="btn btn-outline-success float-end me-2">Reset</a>
                <button class="btn btn-outline-primary form-control float-end" type="button" onclick="">Add Subject</button>
            </form>
        </div>
    </nav>
</div>

<nav aria-label="Page navigation example" class="mt-3">
    <ul class="pagination justify-content-end">
        <li class="page-item @(Model.HasPreviousPage ? " " : " disabled")">
            <a class="page-link link-dark"
               asp-action="Students"
               asp-route-searchKeyword="@ViewData["SearchKeyword"]"
               asp-route-track="@ViewData["Track"]"
               asp-route-strand="@ViewData["Strand"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)">Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link link-dark"
                   asp-action="Schedules"
                   asp-route-searchKeyword="@ViewData["SearchKeyword"]"
                   asp-route-track="@ViewData["Track"]"
                   asp-route-strand="@ViewData["Strand"]"
                   asp-route-pageNumber="@i">
                    @i
                </a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link link-dark"
               asp-action="Students"
               asp-route-searchKeyword="@ViewData["SearchKeyword"]"
               asp-route-track="@ViewData["Track"]"
               asp-route-strand="@ViewData["Strand"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)">
                Next
            </a>
        </li>
    </ul>
</nav>

<table class="table table-striped table-hover text-center">
    <thead>
        <tr>
            <th scope="col">Code</th>
            <th scope="col">Name</th>
            <th scope="col">Units</th>
            <th scope="col">Track & Strand</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() == 0)
        {
            <tr>
                <th colspan="7"><h3>No Records Found</h3></th>
            </tr>
        }
        else
        {
            foreach (var sched in Model.ToList())
            {
                <tr>
                    <td>@sched.Code</td>
                    <td>@sched.Name</td>
                    <td>@sched.Units</td>
                    <td>@sched.TrackAndStrand</td>
                    <td><button class="btn btn-sm btn-primary" id="viewSubjectInfoBtn" onclick="viewSubject('@sched.Id')">View</button></td>
                </tr>
            }
        }
    </tbody>
</table>
<div id="modalPlaceholder"></div>
@section Scripts {
    <script type="text/javascript">
        var isLoading = false;
        var detailsModal;
        var loadSubjectFormData;

        function viewSubject(subjectId) {
            if(isLoading) {
                Toast.fire({
                    icon: 'warning',
                    title: 'Page is Loading'
                });

                return;
            } else {
                isLoading = true;

                $.ajax({
                    url: `/Subjects/${subjectId}`,
                    type: 'GET',
                    success: function (result) {
                        $('#modalPlaceholder').html(result);

                        detailsModal = new bootstrap.Modal(document.getElementById('subjectDetailsModal'), {
                            keyboard: false,
                            backdrop: 'static'
                        });

                        loadSubjectFormData = $('#subjectForm').serialize();

                        detailsModal.show();

                        loadSubjectViewTrackAndStrandEventListener();
                    },
                    error: () => {
                        isLoading = false;

                        Toast.fire({
                            icon: "warning",
                            title: "Error retrieving Subject details"
                        });
                    },
                    complete: () => {
                        isLoading = false;
                    }
                });
            }
        }

        function loadSubjectViewTrackAndStrandEventListener() {
            document.getElementById('subjectTrackSelectList')
                .addEventListener('change', (event) => {
                    switch (event.target.value) {
                        case 'academic':
                            setSubjectAcademicTrackStrands();
                            break;
                        case 'artsanddesign':
                            setSubjectArtsAndDesignTrackStrands();
                            break;
                        case 'sports':
                            setSubjectSportsTrackStrands();
                            break;
                        case 'technicalvocational':
                            setSubjectTechnicalVocationalTrackStrands();
                            break;
                        default:
                            subjectDefaultList();
                            break;
                    }
                });
        }

        function updateSubject(subjectId) {
            if (isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else { 
                if(loadSubjectFormData === $('#subjectForm').serialize()) {
                    detailsModal.hide();
                    $('#modalPlaceholder').html('');

                    return;
                } else {

                    let subjectCode = $('#subjectCode').val();

                    if(subjectCode === '' || subjectCode.length == 0) {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter a Subject Code"
                        });

                        return;
                    }

                    let subjectName = $('#subjectName').val();

                    if(subjectName === '' || subjectName.length == 0) {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter a Subject Name"
                        });

                        return;
                    }

                    let subjectTrackId = $('#subjectTrackSelectList').val();
                    let subjectStrandId = $('#subjectStrandSelectList').val();

                    let subjectSemester = $('#subjectSemester').val();
                    let subjectAcademicYear = $('#subjectAcademicYear').val();

                    let subjectHours = $('#subjectHours').val();

                    if(subjectHours === '' || subjectHours.length == 0 || parseFloat(subjectHours) <= 0) {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter the number of Hours"
                        });

                        return;
                    }

                    let subjectDays = $('#subjectDays').val();

                    if(subjectDays === '' || subjectDays.length == 0 || parseFloat(subjectDays) <= 0) {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter the number of Days"
                        });

                        return;
                    }

                    let subjectUnits = $('#subjectUnits').val();

                    if(subjectUnits === '' || subjectUnits.length == 0 || parseFloat(subjectUnits) <= 0) {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter the number of Units"
                        });

                        return;
                    }

                    let subjectDesc = $('#subjectDesc').val();

                    if(subjectDesc === '' || subjectDesc.length == 0) {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter a Description"
                        });

                        return;
                    }

                    let updatedSubject = {
                        Id: subjectId,
                        Code: subjectCode,
                        Name: subjectName,
                        TrackId: subjectTrackId,
                        StrandId: subjectStrandId,
                        Semester: subjectSemester,
                        AcademicYear: subjectAcademicYear,
                        Hours: subjectHours,
                        Days: subjectDays,
                        Units: subjectUnits,
                        Description: subjectDesc
                    };

                    isLoading = true;
                    let isSuccess = false;
                    let errorMssg = '';

                    $.ajax({
                        url: `/Subjects/${subjectId}`,
                        type: 'PUT',
                        data: updatedSubject,
                        success: function (data) {
                            isSuccess = data.IsSuccess;
                            if (!isSuccess) errorMssg = data.Message;
                        },
                        error: () => {
                            errorMssg = 'An error occurred while trying to updated Subject'
                        },
                        complete: () => {
                            isLoading = false;
                            if (isSuccess) {

                                detailsModal.hide();

                                Toast.fire({
                                    icon: "success",
                                    title: "Subject Updated"
                                });

                                setTimeout(() => {
                                    window.location = window.location.href;
                                }, 3000)
                            } else {
                                Toast.fire({
                                    icon: "warning",
                                    title: errorMssg
                                });
                            }
                        }
                    });
                }
            }
        }

        document.getElementById('trackSelectList')
            .addEventListener('change', (event) => {
                switch (event.target.value) {
                    case 'academic':
                        setAcademicTrackStrands();
                        break;
                    case 'artsanddesign':
                        setArtsAndDesignTrackStrands();
                        break;
                    case 'sports':
                        setSportsTrackStrands();
                        break;
                    case 'technicalvocational':
                        setTechnicalVocationalTrackStrands();
                        break;
                    default:
                        defaultList();
                        break;
                }
            });

        function setAcademicTrackStrands() {
            document.getElementById('strandSelectList').innerHTML = "";

            var academicTrackStrands = @Html.Raw(Json.Serialize(ViewBag.AcademicTrackStrands));

            academicTrackStrands.forEach((strand) => {
                document.getElementById('strandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });
        }

        function setSubjectAcademicTrackStrands() {
            document.getElementById('subjectStrandSelectList').innerHTML = "";

            var academicTrackStrands = @Html.Raw(Json.Serialize(ViewBag.AcademicTrackStrands));

            academicTrackStrands.forEach((strand) => {
                document.getElementById('subjectStrandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });
        }

        function setArtsAndDesignTrackStrands() {
            document.getElementById('strandSelectList').innerHTML = "";

            var artsAndDesignTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.ArtsAndDesignTrackStrands)));

            artsAndDesignTrackStrands.forEach((strand) => {
                document.getElementById('strandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });
        }

        function setSubjectArtsAndDesignTrackStrands() {
            document.getElementById('subjectStrandSelectList').innerHTML = "";

            var artsAndDesignTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.ArtsAndDesignTrackStrands)));

            artsAndDesignTrackStrands.forEach((strand) => {
                document.getElementById('subjectStrandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });
        }

        function setSportsTrackStrands() {
            document.getElementById('strandSelectList').innerHTML = "";

            var sportsTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.SportsTrackStrands)));

            sportsTrackStrands.forEach((strand) => {
                document.getElementById('strandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });
        }

        function setSubjectSportsTrackStrands() {
            document.getElementById('subjectStrandSelectList').innerHTML = "";

            var sportsTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.SportsTrackStrands)));

            sportsTrackStrands.forEach((strand) => {
                document.getElementById('subjectStrandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });
        }

        function setTechnicalVocationalTrackStrands() {
            document.getElementById('strandSelectList').innerHTML = "";

            var technicalVocationalTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.TVLTrackStrands)));

            technicalVocationalTrackStrands.forEach((strand) => {
                document.getElementById('strandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`;
            });
        }

        function setSubjectTechnicalVocationalTrackStrands() {
            document.getElementById('subjectStrandSelectList').innerHTML = "";

            var technicalVocationalTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.TVLTrackStrands)));

            technicalVocationalTrackStrands.forEach((strand) => {
                document.getElementById('subjectStrandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`;
            });
        }

        function defaultList() {
            document.getElementById('strandSelectList').innerHTML = "";

            document.getElementById('strandSelectList').innerHTML += `<option value="">-- Select Strand --</option>`;

            var academicTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.AcademicTrackStrands)));

            academicTrackStrands.forEach((strand) => {
                document.getElementById('strandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });

            var technicalVocationalTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.TVLTrackStrands)));

            technicalVocationalTrackStrands.forEach((strand) => {
                document.getElementById('strandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`;
            });

            document.getElementById('strandSelectList').innerHTML += `<option value="">N/A</option>`;
        }

        function subjectDefaultList() {
            document.getElementById('subjectStrandSelectList').innerHTML = "";

            document.getElementById('subjectStrandSelectList').innerHTML += `<option value="">-- Select Strand --</option>`;

            var academicTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.AcademicTrackStrands)));

            academicTrackStrands.forEach((strand) => {
                document.getElementById('subjectStrandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`
            });

            var technicalVocationalTrackStrands = @(Html.Raw(Json.Serialize(ViewBag.TVLTrackStrands)));

            technicalVocationalTrackStrands.forEach((strand) => {
                document.getElementById('subjectStrandSelectList').innerHTML += `<option value="${strand.Id}">${strand.Name}</option>`;
            });

            document.getElementById('subjectStrandSelectList').innerHTML += `<option value="">N/A</option>`;
        }
    </script>
}