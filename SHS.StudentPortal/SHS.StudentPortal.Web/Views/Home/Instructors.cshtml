@using SHS.StudentPortal.Common.Models
@using SHS.StudentPortal.Common.Utilities.Models
@model InstructorPaginatedList
@{
    ViewData["Title"] = "Instructors";
}
<!-- Navbar Pagination -->
<div class="mt-3">
    <nav class="navbar navbar-light" style="background-color: #e3f2fd; border-radius: 5px">
        <div class="container-fluid">
            <form class="d-flex" asp-controller="Home" asp-action="Instructors" method="get">
                <input class="form-control me-2"
                       type="search"
                       placeholder="Search"
                       aria-label="Search"
                       name="searchKeyword"
                       asp-for="@ViewData["SearchKeyword"]" />
                <select class="form-select me-2" name="departmentId" asp-for="@ViewData["DepartmentId"]" asp-items="@(new SelectList(Model.DepartmentList, "Key", "Value"))">
                    <option value="0">-- Select Department --</option>
                </select>
                <button class="btn btn-outline-primary float-end me-2" type="submit">Search</button>
                <a href="@Url.Action("Instructors", "Home")" class="btn btn-outline-success float-end">Reset</a>
            </form>
        </div>
    </nav>
</div>
<nav aria-label="Page navigation example" class="mt-3">
    <ul class="pagination justify-content-end">
        <li class="page-item @(Model.InstructorList.HasPreviousPage ? "" : "disabled")">
            <a class="page-link link-dark"
               asp-action="Instructors"
               asp-route-searchKeyword="@ViewData["SearchKeyword"]"
               asp-route-departmentId="@ViewData["DepartmentId"]"
               asp-route-pageNumber="@(Model.InstructorList.PageIndex + 1)">Previous</a>
        </li>
        @for (int i = 1; i <= Model.InstructorList.TotalPages; i++)
        {
            <li class="page-item @(i == Model.InstructorList.PageIndex ? "active" : "")">
                <a class="page-link link-dark"
                   asp-action="Instructors"
                   asp-route-searchKeyword="@ViewData["SearchKeyword"]"
                   asp-route-departmentId="@ViewData["DepartmentId"]"
                   asp-route-pageNumber="@i">@i</a>
            </li>
        }
        <li class="page-item @(Model.InstructorList.HasNextPage ? "" : "disabled")">
            <a class="page-link link-dark"
               asp-action="Instructors"
               asp-route-searchKeyword="@ViewData["SearchKeyword"]"
               asp-route-departmentId="@ViewData["DepartmentId"]"
               asp-route-pageNumber="@(Model.InstructorList.PageIndex + 1)">Next</a>
        </li>
    </ul>
</nav>
<table class="table table-striped table-hover text-center">
    <thead>
        <tr>
            <th scope="col">Instructor Id</th>
            <th scope="col">Name</th>
            <th scope="col">Department</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.InstructorList.Count() == 0)
        {
            <tr>
                <th colspan="7"><h3>No Records Found</h3></th>
            </tr>
        }
        else
        {
            foreach (var instr in Model.InstructorList.ToList())
            {
                <tr>
                    <td>@instr.EmployeeId</td>
                    <td>@instr.Name</td>
                    <td>@instr.Department</td>
                    <td><button class="btn btn-sm btn-primary" id="viewInstructorInfo" onclick="viewInstructorInfo('@instr.Id')">View</button></td>
                </tr>
            }
        }
    </tbody>
</table>
<div id="modalPlaceholder"></div>
@section Scripts {
    <script type="text/javascript">
        var detailsModal;

        function viewInstructorInfo(id) {
            $.ajax({
                url: `/Instructors/${id}`,
                type: 'GET',
                success: function (data) {
                    $('#modalPlaceholder').html(data);
                    detailsModal = new bootstrap.Modal(document.getElementById('instructorInfoDetailsModal'), {
                        keyboard: false,
                        backdrop: 'static'
                    });
                    detailsModal.show();
                },
                error: () => {
                    Toast.fire({
                        icon: "warning",
                        title: "Error retrieving Instructor info details"
                    });
                }
            });
        }
    </script>
}