@using SHS.StudentPortal.Common.Models
@using SHS.StudentPortal.Common.Utilities.Models
@model InstructorPaginatedList
@{
    ViewData["Title"] = "Instructors";
}
<!-- Navbar Pagination -->
<div class="mt-3">
    <nav class="navbar navbar-light" style="background-color: #e3f2fd; border-radius: 5px">
        <div class="container-fluid">
            <form class="d-flex" asp-controller="Home" asp-action="Instructors" method="get">
                <input class="form-control me-2"
                       type="search"
                       placeholder="Search"
                       aria-label="Search"
                       name="searchKeyword"
                       asp-for="@ViewData["SearchKeyword"]" />
                <select class="form-select me-2" name="departmentId" asp-for="@ViewData["DepartmentId"]" asp-items="@(new SelectList(Model.DepartmentList, "Key", "Value"))">
                    <option value="0">-- Select Department --</option>
                </select>
                <button class="btn btn-outline-primary float-end me-2" type="submit">Search</button>
                <a href="@Url.Action("Instructors", "Home")" class="btn btn-outline-success float-end me-2">Reset</a>
                <button class="btn btn-outline-primary form-control float-end" type="button" onclick="openCreateInstructorModal()">Add Instructor</button>
            </form>
        </div>
    </nav>
</div>
<nav aria-label="Page navigation example" class="mt-3">
            <ul class="pagination justify-content-end">
                <li class="page-item @(Model.InstructorList.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link link-dark"
                       asp-action="Instructors"
                       asp-route-searchKeyword="@ViewData["SearchKeyword"]"
                       asp-route-departmentId="@ViewData["DepartmentId"]"
                       asp-route-pageNumber="@(Model.InstructorList.PageIndex + 1)">Previous</a>
                </li>
                @for (int i = 1; i <= Model.InstructorList.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.InstructorList.PageIndex ? "active" : "")">
                        <a class="page-link link-dark"
                           asp-action="Instructors"
                           asp-route-searchKeyword="@ViewData["SearchKeyword"]"
                           asp-route-departmentId="@ViewData["DepartmentId"]"
                           asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.InstructorList.HasNextPage ? "" : "disabled")">
                    <a class="page-link link-dark"
                       asp-action="Instructors"
                       asp-route-searchKeyword="@ViewData["SearchKeyword"]"
                       asp-route-departmentId="@ViewData["DepartmentId"]"
                       asp-route-pageNumber="@(Model.InstructorList.PageIndex + 1)">Next</a>
                </li>
            </ul>
        </nav>
<table class="table table-striped table-hover text-center">
    <thead>
        <tr>
            <th scope="col">Instructor Id</th>
            <th scope="col">Name</th>
            <th scope="col">Department</th>
            <th scope="col">Advisory Section</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.InstructorList.Count() == 0)
        {
            <tr>
                <th colspan="7"><h3>No Records Found</h3></th>
            </tr>
        }
        else
        {
            foreach (var instr in Model.InstructorList.ToList())
            {
                <tr>
                    <td>@instr.EmployeeId</td>
                    <td>@instr.Name</td>
                    <td>@instr.Department</td>
                    <td>@instr.AdvisorySection</td>
                    <td><button class="btn btn-sm btn-primary" id="viewInstructorInfoBtn_@instr.EmployeeId" onclick="viewInstructorInfo('@instr.Id', '@instr.EmployeeId')">View</button></td>
                </tr>
            }
        }
    </tbody>
</table>
<div id="modalPlaceholder"></div>
<div id="createInstructorModalPlaceholder"></div>
@section Scripts {
    <script type="text/javascript">
        var detailsModal;
        var createInstructorModal;
        var instructorInfoFormDataOnLoad;
        var isLoading = false;

        function toggleViewInstrBtnOnLoad(isLoading, empId) {
            let viewInstructorInfoBtn = document.getElementById(`viewInstructorInfoBtn_${empId}`);
            viewInstructorInfoBtn.disabled = isLoading;
        }

        function viewInstructorInfo(id, empId) {
            if(isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else {
                isLoading = true;
                toggleViewInstrBtnOnLoad(true, empId);

                $.ajax({
                    url: `/Instructors/${id}`,
                    type: 'GET',
                    success: function (data) {
                        $('#modalPlaceholder').html(data);
                        detailsModal = new bootstrap.Modal(document.getElementById('instructorInfoDetailsModal'), {
                            keyboard: false,
                            backdrop: 'static'
                        });

                        // Set form data on load to determine dirty
                        instructorInfoFormDataOnLoad = $('#instructorInfoForm').serialize();

                        detailsModal.show();
                    },
                    error: () => {
                        isLoading = false;
                        Toast.fire({
                            icon: "warning",
                            title: "Error retrieving Instructor Info"
                        });
                    },
                    complete: () => {
                        isLoading = false;
                        toggleViewInstrBtnOnLoad(false, empId);
                    }
                });
            }
        }

        function openCreateInstructorModal() {
            if(isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else {
                isLoading = true;

                $.ajax({
                    url: `/Instructors/New`,
                    type: 'GET',
                    success: function (data) {
                        $('#createInstructorModalPlaceholder').html(data);
                        createInstructorModal = new bootstrap.Modal(document.getElementById('createInstructorModal'), {
                            keyboard: false,
                            backdrop: 'static'
                        });
                        createInstructorModal.show();
                    },
                    error: () => {
                        isLoading = false;
                        Toast.fire({
                            icon: "warning",
                            title: "Error preparing New Instructor view"
                        });
                    },
                    complete: () => {
                        isLoading = false;
                    }
                });
            }
        }

        function createInstructor() {
            if(isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else {

                let strongPasswordRegex = @Html.Raw("/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@.#$!%*?&^])[A-Za-z\\d@.#$!%*?&]{8,15}$/");

                let employeeId = $('#createInstrEmployeeId').val();
                let major = $('#createInstrMajor').val();
                let department = $('#createInstrDept :selected').val();
                let advisorySection = $('#createInstrAdvisorySection :selected').val();
                let firstName = $('#createInstrFirstName').val();
                let middleName = $('#createInstrMiddleName').val();
                let lastName = $('#createInstrLastName').val();
                let contactInfo = $('#createInstrContactInfo').val();
                let username = $('#createInstrUsername').val();
                let password = $('#createInstrPassword').val();
                let confirmPassword = $('#createInstrConfirmPassword').val();
                let emailAdd = $('#createInstrEmailAdd').val();

                if(employeeId.length == 0 || employeeId == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter an employee id"
                    });

                    return;
                } else if(major.length == 0 || major == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter a major"
                    });

                    return;
                } else if(department == 0) {
                    Toast.fire({
                        icon: "warning",
                        title: "Please select a department"
                    });

                    return;
                } else if(advisorySection == '@(Guid.Empty)') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please select an advisory section"
                    });

                    return;
                } else if(firstName.length == 0 || firstName == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter a first name"
                    });

                    return;
                } else if(lastName.length == 0 || lastName == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter a last name"
                    });

                    return;
                } else if(contactInfo.length == 0 || contactInfo == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter a contact info"
                    });

                    return;
                } else if(username.length == 0 || username == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter a username"
                    });

                    return;
                } else if(password.length == 0 || password == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter a password"
                    });

                    return;
                } else if(confirmPassword.length == 0 || confirmPassword == '') {
                    Toast.fire({
                        icon: "warning",
                        title: "Please confirm your password"
                    });

                    return;
                } else if(password !== confirmPassword) {
                    Toast.fire({
                        icon: "warning",
                        title: "Passwords do not match"
                    });

                    return;
                } else if(!strongPasswordRegex.test(password)) {
                    Toast.fire({
                        timer: 5000,
                        icon: 'warning',
                        title: 'Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character.'
                    })

                    return;
                } else {
                    let newInstructorObj = {
                        EmployeeId: employeeId,
                        Major: major,
                        DepartmentId: department,
                        AdvisorySectionId: advisorySection,
                        FirstName: firstName,
                        MiddleName: middleName,
                        LastName: lastName,
                        ContactInfo: contactInfo,
                        Username: username,
                        Password: password,
                        EmailAddress: emailAdd
                    };

                    isLoading = true;
                
                    let isSuccess = false;
                    let errMssg = '';

                    $.ajax({
                        url: `/Instructors/New`,
                        type: 'POST',
                        data: newInstructorObj,
                        success: (data) => {
                            isSuccess = data.IsSuccess;
                            if(!isSuccess) errMssg = data.Message;
                        },
                        error: () => {
                            isLoading = false;
                            errMssg = "Error creating new Instructor";
                        },
                        complete: () => {
                            isLoading = false;

                            if(isSuccess) {
                                createInstructorModal.hide();
                                $('#createInstructorModalPlaceholder').html('');

                                Toast.fire({
                                    icon: "success",
                                    title: "Instructor created successfully"
                                });

                                setTimeout(() => {
                                    window.location = window.location.href;
                                }, 3000);
                            } else {
                                Toast.fire({
                                    icon: "warning",
                                    title: errMssg
                                });
                            }
                        }
                    });
                }
            }
        }

        var updatePasswordModal;
        function openUpdatePasswordModal() {
            updatePasswordModal = bootstrap.Modal.getOrCreateInstance(document.getElementById('updatePasswordModal'), {
                keyboard: false,
                backdrop: 'static'
            });

            updatePasswordModal.show();
        }

        function updateInstructorPassword(id) {

            if (isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page is Loading"
                });

                return;
            } else {
                if ($('#updatePasswordNewPassword').val() == '' || $('#updatePasswordConfirmNewPassword').val() == '') {
                    Toast.fire({
                        icon: 'warning',
                        title: 'Please fill in all fields'
                    });

                    return;
                }

                if ($('#updatePasswordNewPassword').val().length < 6 || $('#updatePasswordConfirmNewPassword').val().length < 6) {
                    Toast.fire({
                        icon: 'warning',
                        title: 'Password must be at least 6 characters'
                    });

                    return;
                }

                if ($('#updatePasswordNewPassword').val() != $('#updatePasswordConfirmNewPassword').val()) {
                    Toast.fire({
                        icon: 'warning',
                        title: 'Passwords do not match'
                    });

                    return;
                }

                let isSuccess = false;
                let errorMssg = '';

                isLoading = true;
                let updatePasswordBtn = document.getElementById('updatePasswordBtn');
                updatePasswordBtn.disabled = true;

                $.ajax({
                    url: `/Instructors/UpdatePassword/${id}`,
                    type: 'POST',
                    data: {
                        newPassword: $('#updatePasswordNewPassword').val().toString()
                    },
                    dataType: 'json',
                    success: function (data) {
                        isSuccess = data.IsSuccess;
                        if (!isSuccess) errorMssg = data.Message;
                    },
                    error: function (data) {
                        errorMssg = "An error occurred while updating Instructor password.";
                    },
                    complete: function () {
                        isLoading = false;
                        updatePasswordBtn.disabled = false;

                        if (isSuccess) {

                            updatePasswordModal.hide();

                            Toast.fire({
                                icon: "success",
                                title: "Password Updated"
                            });
                        } else {
                            Toast.fire({
                                icon: "warning",
                                title: errorMssg
                            });
                        }
                    }
                });
            }
        }

        function updateInstructor(id) {
            if(isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else {
                
                // Check formData if dirty
                if (instructorInfoFormDataOnLoad === $('#instructorInfoForm').serialize()) {
                    detailsModal.hide();
                    $('#modalPlaceholder').html('');

                    Toast.fire({
                        icon: "success",
                        title: "Instructor Info Updated"
                    });
                } else {

                    let major = $('#instrMajor').val();
                    let department = $('#instrDept :selected').val();
                    let advisorySection = $('#instrAdvisorySection :selected').val();
                    let firstName = $('#instrFirstName').val();
                    let middleName = $('#instrMiddleName').val();
                    let lastName = $('#instrLastName').val();
                    let contactInfo = $('#instrContactInfo').val();

                    if(major.length == 0 || major == '') {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter a major"
                        });

                        return
                    } else if(department.length == 0 || department == '') {
                        Toast.fire({
                            icon: "warning",
                            title: "Please select a department"
                        });

                        return;
                    } else if(advisorySection.length == 0 || advisorySection == '') {
                        Toast.fire({
                            icon: "warning",
                            title: "Please select an advisory section"
                        });

                        return;
                    } else if(firstName.length == 0 || firstName == '') {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter a first name"
                        });

                        return;
                    } else if(lastName.length == 0 || lastName == '') {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter a last name"
                        });

                        return;
                    } else if(contactInfo.length == 0 || contactInfo == '') {
                        Toast.fire({
                            icon: "warning",
                            title: "Please enter a contact info"
                        });

                        return;
                    } else {
                        isLoading = true;
                        let updateInstructorBtn = document.getElementById('updateInstructorBtn');
                        updateInstructorBtn.disabled = true;

                        let updatedInstructorInfoObj = {
                            Major: major,
                            DepartmentId: department,
                            AdvisorySectionId: advisorySection,
                            FirstName: firstName,
                            MiddleName: middleName,
                            LastName: lastName,
                            ContactInfo: contactInfo
                        };

                        let isSuccess = false;
                        let errorMssg = '';

                        $.ajax({
                            url: `/Instructors/Update/${id}`,
                            type: 'PUT',
                            data: updatedInstructorInfoObj,
                            success: function (data) {
                                isSuccess = data.IsSuccess;
                                if (!isSuccess) errorMssg = data.Message;
                            },
                            error: function (data) {
                                errorMssg = "An error occurred while updating Instructor.";
                            },
                            complete: function () {
                                isLoading = false;
                                updateInstructorBtn.disabled = false;

                                if (isSuccess) {

                                    detailsModal.hide();
                                    $('#modalPlaceholder').html('');

                                    Toast.fire({
                                        icon: "success",
                                        title: "Instructor Info Updated"
                                    });

                                    setTimeout(() => {
                                        window.location = window.location.href;
                                    }, 3000);
                                } else {
                                    Toast.fire({
                                        icon: "warning",
                                        title: errorMssg
                                    });
                                }
                            }
                        });
                    }
                }
            }
        }
    </script>
}