@using SHS.StudentPortal.Common.Models
@using SHS.StudentPortal.Common.Utilities.Models
@model PaginatedList<DepartmentListViewModel>
@{
    ViewData["Title"] = "Departments";
}
<!-- Navbar Pagination -->
<div class="mt-3">
    <nav class="navbar navbar-light" style="background-color: #e3f2fd; border-radius: 5px">
        <div class="container-fluid">
            <form class="d-flex" asp-controller="Home" asp-action="Departments" method="get">
                <input class="form-control me-2"
                       type="search"
                       placeholder="Search"
                       aria-label="Search"
                       name="searchKeyword"
                       asp-for="@ViewData["SearchKeyword"]" />
                <button class="btn btn-outline-primary float-end me-2" type="submit">Search</button>
                <a href="@Url.Action("Departments", "Home")" class="btn btn-outline-success float-end me-2">Reset</a>
                <button class="btn btn-outline-primary form-control float-end" type="button" onclick="openCreateDepartmentModal()">Add Department</button>
            </form>
        </div>
    </nav>
</div>
<nav aria-label="Page navigation example" class="mt-3">
    <ul class="pagination justify-content-end">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link link-dark"
               asp-action="Departments"
               asp-route-searchKeyword="@ViewData["SearchKeyword"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)">Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link link-dark"
                   asp-action="Departments"
                   asp-route-searchKeyword="@ViewData["SearchKeyword"]"
                   asp-route-pageNumber="@i">@i</a>
            </li>
        }
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link link-dark"
               asp-action="Departments"
               asp-route-searchKeyword="@ViewData["SearchKeyword"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
        </li>
    </ul>
</nav>
<table class="table table-striped table-hover text-center">
    <thead>
        <tr>
            <th scope="col">Department Name</th>
            <th scope="col">Employee Count</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() == 0)
        {
            <tr>
                <th colspan="3"><h3>No Records Found</h3></th>
            </tr>
        }
        else
        {
            foreach (var dept in Model.ToList())
            {
                <tr>
                    <td>@dept.Name</td>
                    <td>@dept.EmployeeCount</td>
                    <td><button class="btn btn-sm btn-primary" onclick="viewDepartment(@dept.Id)">View</button></td>
                </tr>
            }
        }
    </tbody>
</table>
<div id="modalPlaceholder"></div>
<div id="createDepartmentModalPlaceholder"></div>
@section Scripts {
    <script type="text/javascript">
        var detailsModal;
        var isLoading = false;

        var createDepartmentModal;
        function viewDepartment(deptId) {
            if(isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else {
                isLoading = true;

                $.ajax({
                    url: `/Departments/${deptId}`,
                    type: 'GET',
                    success: function(data) {
                        $('#modalPlaceholder').html(data);
                        detailsModal = new bootstrap.Modal(document.getElementById('departmentDetailsModal'), {
                            keyboard: false,
                            backdrop: 'static'
                        });
                        detailsModal.show();
                    },
                    error: function(err) {
                        Toast.fire({
                            icon: "warning",
                            title: "Error retrieving Department Info"
                        });
                    },
                    complete: function() {
                        isLoading = false;
                    }
                })
            }
        }

        function openCreateDepartmentModal() {
            if(isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else {
                isLoading = true;

                $.ajax({
                    url: `/Departments/New`,
                    type: 'GET',
                    success: function (data) {
                        $('#createDepartmentModalPlaceholder').html(data);
                        createDepartmentModal = new bootstrap.Modal(document.getElementById('createDepartmentModal'), {
                            keyboard: false,
                            backdrop: 'static'
                        });
                        createDepartmentModal.show();
                    },
                    error: () => {
                        isLoading = false;
                        Toast.fire({
                            icon: "warning",
                            title: "Error preparing New Department view"
                        });
                    },
                    complete: () => {
                        isLoading = false;
                    }
                });
            }
        }

        function createDepartment() {
            if (isLoading) {
                Toast.fire({
                    icon: "warning",
                    title: "Page Loading"
                });

                return;
            } else { 
                let deptName = $('#createDeptName').val();
                let deptDesc = $('#createDeptDesc').val();

                if (deptName == '' || deptName.length == 0) {
                    Toast.fire({
                        icon: "warning",
                        title: "Please enter a valid Department Name"
                    });

                    return;
                } else {
                    isLoading = true;
                    let isSuccess = false;
                    let errorMssg = '';

                    let newDeptObj = {
                        Name: deptName,
                        Description: deptDesc
                    }

                    $.ajax({
                        url: `/Departments/New`,
                        type: 'POST',
                        data: newDeptObj,
                        success: function (data) {
                            isSuccess = data.IsSuccess;
                            if (!isSuccess) errorMssg = data.Message;
                        },
                        error: () => {
                            errorMssg = 'An error occurred while creating a new Department';
                        },
                        complete: () => {
                            isLoading = false;

                            if(isSuccess) {

                                createDepartmentModal.hide();
                                $('#createDepartmentModalPlaceholder').html('');

                                Toast.fire({
                                    icon: "success",
                                    title: "Department Created"
                                });

                                setTimeout(() => {
                                    window.location = window.location.href;
                                }, 3000);
                            } else {
                                Toast.fire({
                                    icon: "warning",
                                    title: errorMssg
                                });
                            }
                        }
                    });
                }
            }
        }
    </script>
}